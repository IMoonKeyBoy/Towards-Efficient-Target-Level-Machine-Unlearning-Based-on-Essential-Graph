(pytorch) [hengxu@mars21 importanceanalysis]$ python scheme_select_important_weight_alexnet_important.py
calculate_mask_batch_size = 1
cam_method = GradCAM
device = cuda
index_number = 2
proportion = 0.2
target_class = 0
target_layer = features.10
total_class_number = 1000
tv_model = alexnet
tensor(56.4965, device='cuda:0') 	 tensor(82., device='cuda:0')
tensor(55.2072, device='cuda:0') 	 tensor(70., device='cuda:0')
tensor(53.0691, device='cuda:0') 	 tensor(50., device='cuda:0')
tensor(50.6907, device='cuda:0') 	 tensor(18., device='cuda:0')
tensor(48.3503, device='cuda:0') 	 tensor(12., device='cuda:0')
tensor(45.3033, device='cuda:0') 	 tensor(8., device='cuda:0')
tensor(42.0901, device='cuda:0') 	 tensor(6., device='cuda:0')
tensor(38.5265, device='cuda:0') 	 tensor(2., device='cuda:0')
tensor(35.6396, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(32.8729, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(32.8729, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(30.6867, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(27.5916, device='cuda:0') 	 tensor(2., device='cuda:0')
tensor(24.8428, device='cuda:0') 	 tensor(4., device='cuda:0')
tensor(19.8779, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(17.7758, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(15.2693, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(11.0771, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(6.8288, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(4.2082, device='cuda:0') 	 tensor(0., device='cuda:0')


(pytorch) [hengxu@mars21 importanceanalysis]$ python scheme_select_important_weight_alexnet_non_important.py
calculate_mask_batch_size = 1
cam_method = GradCAM
device = cuda
index_number = 2
proportion = 0.2
target_class = 0
target_layer = features.10
total_class_number = 1000
tv_model = alexnet
tensor(56.4965, device='cuda:0') 	 tensor(82., device='cuda:0')
tensor(54.9870, device='cuda:0') 	 tensor(86., device='cuda:0')
tensor(53.0571, device='cuda:0') 	 tensor(86., device='cuda:0')
tensor(51.2472, device='cuda:0') 	 tensor(88., device='cuda:0')
tensor(48.4545, device='cuda:0') 	 tensor(90., device='cuda:0')
tensor(45.4074, device='cuda:0') 	 tensor(92., device='cuda:0')
tensor(42.2803, device='cuda:0') 	 tensor(94., device='cuda:0')
tensor(39.4575, device='cuda:0') 	 tensor(96., device='cuda:0')
tensor(35.5375, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(30.3824, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(28.8869, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(28.8869, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(26.1461, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(21.4735, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(17.7578, device='cuda:0') 	 tensor(100., device='cuda:0')
tensor(14.1461, device='cuda:0') 	 tensor(100., device='cuda:0')
tensor(12.6186, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(8.5245, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(6.8428, device='cuda:0') 	 tensor(94., device='cuda:0')
tensor(4.6226, device='cuda:0') 	 tensor(86., device='cuda:0')

(pytorch) [hengxu@mars21 importanceanalysis]$ python scheme_select_important_weight_alexnet_random.py
calculate_mask_batch_size = 1
cam_method = GradCAM
device = cuda
index_number = 2
proportion = 0.2
target_class = 0
target_layer = features.10
total_class_number = 1000
tv_model = alexnet
tensor(56.4965, device='cuda:0') 	 tensor(82., device='cuda:0')
tensor(55.4114, device='cuda:0') 	 tensor(82., device='cuda:0')
tensor(53.9279, device='cuda:0') 	 tensor(84., device='cuda:0')
tensor(52.5085, device='cuda:0') 	 tensor(80., device='cuda:0')
tensor(51.1612, device='cuda:0') 	 tensor(88., device='cuda:0')
tensor(48.6246, device='cuda:0') 	 tensor(70., device='cuda:0')
tensor(47.2292, device='cuda:0') 	 tensor(82., device='cuda:0')
tensor(44.8048, device='cuda:0') 	 tensor(80., device='cuda:0')
tensor(42.2883, device='cuda:0') 	 tensor(50., device='cuda:0')
tensor(39.3874, device='cuda:0') 	 tensor(68., device='cuda:0')
tensor(36.7447, device='cuda:0') 	 tensor(70., device='cuda:0')
tensor(31.1351, device='cuda:0') 	 tensor(54., device='cuda:0')
tensor(28.4685, device='cuda:0') 	 tensor(54., device='cuda:0')
tensor(26.3423, device='cuda:0') 	 tensor(54., device='cuda:0')
tensor(21.1912, device='cuda:0') 	 tensor(10., device='cuda:0')
tensor(13.2693, device='cuda:0') 	 tensor(2., device='cuda:0')
tensor(12.1501, device='cuda:0') 	 tensor(46., device='cuda:0')
tensor(7.5195, device='cuda:0') 	 tensor(70., device='cuda:0')
tensor(2.4725, device='cuda:0') 	 tensor(6., device='cuda:0')
tensor(1.1011, device='cuda:0') 	 tensor(0., device='cuda:0')



(pytorch) [hengxu@mars22 importanceanalysis]$ python scheme_select_important_weight_vgg13_important.py
calculate_mask_batch_size = 1
cam_method = GradCAM
device = cuda
index_number = 2
proportion = 0.2
target_class = 0
target_layer = features.22
total_class_number = 1000
tv_model = vgg13
tensor(69.9119, device='cuda:0') 	 tensor(88., device='cuda:0')
tensor(68.9670, device='cuda:0') 	 tensor(80., device='cuda:0')
tensor(67.8438, device='cuda:0') 	 tensor(42., device='cuda:0')
tensor(66.0581, device='cuda:0') 	 tensor(6., device='cuda:0')
tensor(64.1982, device='cuda:0') 	 tensor(2., device='cuda:0')
tensor(62.0981, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(59.8939, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(57.0350, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(53.1932, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(50.1782, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(50.1782, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(50.1782, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(46.6086, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(42.8569, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(37.4314, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(31.8178, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(28.2943, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(22.8088, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(19.0791, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(14.5846, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(8.5125, device='cuda:0') 	 tensor(0., device='cuda:0')


(pytorch) [lefzhang@mars11 importanceanalysis]$ python scheme_select_important_weight_vgg13_non_important.py
calculate_mask_batch_size = 1
cam_method = GradCAM
device = cuda
index_number = 2
proportion = 0.2
target_class = 0
target_layer = features.22
total_class_number = 1000
tv_model = vgg13
tensor(69.9219, device='cuda:0') 	 tensor(88., device='cuda:0')
tensor(68.4805, device='cuda:0') 	 tensor(92., device='cuda:0')
tensor(66.2583, device='cuda:0') 	 tensor(96., device='cuda:0')
tensor(64.3503, device='cuda:0') 	 tensor(96., device='cuda:0')
tensor(62.3624, device='cuda:0') 	 tensor(96., device='cuda:0')
tensor(59.4555, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(56.6166, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(53.5676, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(49.8278, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(44.9189, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(44.9189, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(44.9189, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(43.6537, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(41.5415, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(37.2292, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(32.2142, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(27.8659, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(24.3764, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(20.0521, device='cuda:0') 	 tensor(98., device='cuda:0')
tensor(14.0320, device='cuda:0') 	 tensor(78., device='cuda:0')
tensor(8.2442, device='cuda:0') 	 tensor(0., device='cuda:0')

(pytorch) [lefzhang@mars3 importanceanalysis]$ python scheme_select_important_weight_vgg13_random.py
calculate_mask_batch_size = 1
cam_method = GradCAM
device = cuda
index_number = 2
proportion = 0.2
target_class = 0
target_layer = features.22
total_class_number = 1000
tv_model = vgg13
tensor(69.9219, device='cuda:0') 	 tensor(88., device='cuda:0')
tensor(68.5826, device='cuda:0') 	 tensor(88., device='cuda:0')
tensor(67.4354, device='cuda:0') 	 tensor(86., device='cuda:0')
tensor(66.2523, device='cuda:0') 	 tensor(92., device='cuda:0')
tensor(64.8769, device='cuda:0') 	 tensor(82., device='cuda:0')
tensor(63.5996, device='cuda:0') 	 tensor(88., device='cuda:0')
tensor(61.0290, device='cuda:0') 	 tensor(86., device='cuda:0')
tensor(59.9780, device='cuda:0') 	 tensor(84., device='cuda:0')
tensor(56.2663, device='cuda:0') 	 tensor(82., device='cuda:0')
tensor(53.6076, device='cuda:0') 	 tensor(80., device='cuda:0')
tensor(50.7127, device='cuda:0') 	 tensor(84., device='cuda:0')
tensor(48.9489, device='cuda:0') 	 tensor(46., device='cuda:0')
tensor(44.6466, device='cuda:0') 	 tensor(50., device='cuda:0')
tensor(37.2312, device='cuda:0') 	 tensor(18., device='cuda:0')
tensor(32.7327, device='cuda:0') 	 tensor(92., device='cuda:0')
tensor(27.3734, device='cuda:0') 	 tensor(82., device='cuda:0')
tensor(18.1121, device='cuda:0') 	 tensor(32., device='cuda:0')
tensor(14.4745, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(9.7918, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(3.4955, device='cuda:0') 	 tensor(0., device='cuda:0')
tensor(0.1001, device='cuda:0') 	 tensor(0., device='cuda:0')
